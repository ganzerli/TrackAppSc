/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../AppData/Roaming/npm/node_modules/webpack/node_modules/process/browser.js":
/*!*************************************************!*\
  !*** (webpack)/node_modules/process/browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack:///(webpack)/node_modules/process/browser.js?");

/***/ }),

/***/ "./dist/js/Calls/Calls.js":
/*!********************************!*\
  !*** ./dist/js/Calls/Calls.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Calls; });\n/* harmony import */ var _ClientDb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ClientDb */ \"./dist/js/ClientDb/index.js\");\n/* harmony import */ var _GoalsManager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../GoalsManager */ \"./dist/js/GoalsManager/index.js\");\n\r\n\r\nclass Calls {\r\n  constructor() {\r\n    this.response = [];\r\n  }\r\n\r\n  // functions for fetching the local storage\r\n\r\n  getDataFromIndexedDb() {\r\n    let promise;\r\n    const db = new _ClientDb__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    promise = db.getRecords();\r\n    return promise;\r\n    // return this.response;\r\n  }\r\n\r\n  // called from the action of the form to add an element\r\n  pushDataToIndexedDb(data) {\r\n    const db = new _ClientDb__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    db.insertRecord(data);\r\n  }\r\n\r\n  deleteFromIndexedDb(id) {\r\n    const db = new _ClientDb__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    db.deleteOne(id);\r\n  }\r\n\r\n  updateRecord(dataObj) {\r\n    const db = new _ClientDb__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    db.updateOne(dataObj);\r\n  }\r\n\r\n  checkGoal(name, sessionId, info) {\r\n    //update the goal in the storage\r\n    const gm = new _GoalsManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"](name, sessionId);\r\n    gm.writeGoal(info);\r\n  }\r\n\r\n  getGoals() {\r\n    const gm = new _GoalsManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n    return gm.getGoals();\r\n  }\r\n\r\n  deleteGoal(name) {\r\n    const gm = new _GoalsManager__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n    return gm.deleteGoal(name);\r\n  }\r\n  // functions to get something from remote storage\r\n  getDataFromBackend() {}\r\n  pushDataToBackend() {}\r\n}\r\n\n\n//# sourceURL=webpack:///./dist/js/Calls/Calls.js?");

/***/ }),

/***/ "./dist/js/ClientDb/index.js":
/*!***********************************!*\
  !*** ./dist/js/ClientDb/index.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ClientDb; });\nclass ClientDb {\r\n  constructor() {\r\n    this.set = [];\r\n    this.storeArray = [];\r\n    this.DB; //needed for the indexed db result\r\n    //setup the transaction type\r\n    //\r\n    // connection to db\r\n    // instanciate a new indexed database with name and version\r\n    this.recordsDb = window.indexedDB.open(\"recordsDb\", 1);\r\n\r\n    // this method runs only once when instanciated\r\n    /**\r\n     * IN THE TOOLBOX OF THE BROWSER SELECTING APPLICATION STORAGE INDEXED DB IS POSSIBLE TO DELETE AN INSTANCIATED DB IN THE BROWSER;\r\n     *  DELETING THE DB USED; WHEN THE NEW DB GET CREATED THIS METHOD RUNS AGAIN; ONLY ONCE PER DB\r\n     */\r\n    this.recordsDb.onupgradeneeded = e => {\r\n      // IDBDatabase {name: \"recordsDb\", version: 1, objectStoreNames: DOMStringList, onabort: null, onclose: null, …}\r\n      let db = e.target.result;\r\n      // ####################### INDEXED DB   -  S C H E M A  -\r\n      // keyPath is the indexes\r\n      let objectStore = db.createObjectStore(\"recordsDb\", {\r\n        keyPath: \"key\",\r\n        autoIncrement: true\r\n      });\r\n      // create the Index 1) field name, 2) keypath 3)options\r\n      objectStore.createIndex(\"title\", \"title\", { unique: false });\r\n      objectStore.createIndex(\"body\", \"body\", { unique: false });\r\n      objectStore.createIndex(\"date\", \"date\", { unique: false });\r\n      objectStore.createIndex(\"checked\", \"false\", { unique: false });\r\n      objectStore.createIndex(\"sessionId\", \"sessionId\", { unique: false });\r\n      objectStore.createIndex(\"alarm\", \"alarm\", { unique: false });\r\n\r\n      console.log(\"database ready first time running\");\r\n    };\r\n  }\r\n\r\n  // methods of this class must get set in the db and map to this.set\r\n  fetchRecordsFromIndexedDb() {\r\n    return new Promise(resolve => {\r\n      // load the connection\r\n      // SUCCESS opening\r\n      this.recordsDb.onsuccess = () => {\r\n        this.DB = this.recordsDb.result;\r\n        // set transaction and get the object store from the store of transaction in thid db\r\n        let objectStore = this.DB.transaction(\"recordsDb\").objectStore(\r\n          \"recordsDb\"\r\n        );\r\n        // this is the method to use to get the data\r\n        objectStore.openCursor().onsuccess = e => {\r\n          // assing the cursor\r\n          // the cursor has the forst key and a proprty move next\r\n          let cursor = e.target.result;\r\n          if (cursor) {\r\n            cursor.continue();\r\n            const respObj = {\r\n              id: cursor.value.key,\r\n              title: cursor.value.title,\r\n              body: cursor.value.body,\r\n              date: cursor.value.date,\r\n              checked: cursor.value.checked,\r\n              sessionId: cursor.value.sessionId,\r\n              alarm: cursor.value.alarm\r\n            };\r\n            this.storeArray.push(respObj);\r\n          } else {\r\n            // when the cursor has finished , then return!!\r\n            resolve(this.storeArray);\r\n          }\r\n        };\r\n      };\r\n      //errors on connection\r\n      this.recordsDb.onerror = e => {\r\n        console.log(\"error\" + e);\r\n      };\r\n    });\r\n  }\r\n\r\n  async loadSetFromIndexedDb() {\r\n    let result;\r\n    // MUST BE AWAIT OR RETURNS ERROR THEN OF UNDEFINED !!\r\n    await this.fetchRecordsFromIndexedDb().then(res => {\r\n      result = [...res];\r\n      return result;\r\n    });\r\n\r\n    return result;\r\n  }\r\n  /**\r\n   * INSERT RECORT MIST SUPPLY TO THE INDEXED DB AN OBJECT WITH THE PROPS SET AS THE SCHEMA FOR TTHE DB\r\n   *\r\n   */\r\n  insertRecord(record) {\r\n    // taking the record and push into array\r\n    const theRecord = record;\r\n    // load the set\r\n    let promise = this.loadSetFromIndexedDb();\r\n\r\n    // SUCCESS opening\r\n    this.recordsDb.onsuccess = () => {\r\n      this.DB = this.recordsDb.result;\r\n      // then\r\n      let transaction = this.DB.transaction([\"recordsDb\"], \"readwrite\");\r\n      // objectStore has the keypath\r\n      let objectStore = transaction.objectStore(\"recordsDb\");\r\n      // make the request to the db\r\n      let request = objectStore.add(theRecord);\r\n      //console.log(request);\r\n      // SUCCESS\r\n      request.onsuccess = () => {\r\n        console.log(\"the record is been added\"); // if refresh form needed or something\r\n      };\r\n      transaction.oncomplete = () => {\r\n        console.log(\"transaction end, recors should be inserted\");\r\n      };\r\n      transaction.onerror = () => {\r\n        console.log(\r\n          \"something went wrong with transaction indexed Db insertrecord method\"\r\n        );\r\n      };\r\n      // SET THE SET\r\n      //this.set.unshift(record);\r\n    };\r\n    // ERROR on open\r\n    this.recordsDb.onerror = e => {\r\n      console.log(\"error\" + e);\r\n    };\r\n    // returns the set after new element is been pushed\r\n\r\n    return promise;\r\n  }\r\n\r\n  // DELETE\r\n  deleteOne(id) {\r\n    this.recordsDb.onsuccess = () => {\r\n      this.DB = this.recordsDb.result;\r\n      let transaction = this.DB.transaction([\"recordsDb\"], \"readwrite\");\r\n      let objectStore = transaction.objectStore(\"recordsDb\");\r\n      const idInteger = parseInt(id);\r\n      objectStore.delete(idInteger);\r\n      transaction.oncomplete = () => {\r\n        console.log(\"the record SHOULD BE DELETED\");\r\n      };\r\n    };\r\n    // not returning\r\n  }\r\n\r\n  //\r\n  getRecords() {\r\n    // this.loadSetFromIndexedDb(); is an ASYNC fuction AWAITING the promise returned from this.fetchRecordsFromIndexedDb()\r\n    let promise = this.loadSetFromIndexedDb();\r\n    //  ----->   to check\r\n    //console.log(promise);\r\n    //promise.then(res => console.log(res));\r\n    return promise;\r\n  }\r\n\r\n  updateOne(obj) {\r\n    // getting the element with this id\r\n\r\n    this.recordsDb.onsuccess = () => {\r\n      this.DB = this.recordsDb.result;\r\n      let transaction = this.DB.transaction([\"recordsDb\"], \"readwrite\");\r\n      let objectStore = transaction.objectStore(\"recordsDb\");\r\n\r\n      let request = objectStore.put(obj);\r\n      // sucess updating\r\n      request.onsuccess = () => {\r\n        console.log(\"success updating\");\r\n      };\r\n      //get the object\r\n      transaction.oncomplete = () => {\r\n        console.log(\"the record SHOULD BE UPDATED\");\r\n      };\r\n    };\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///./dist/js/ClientDb/index.js?");

/***/ }),

/***/ "./dist/js/GoalsManager/index.js":
/*!***************************************!*\
  !*** ./dist/js/GoalsManager/index.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return GoalsManager; });\nclass GoalsManager {\r\n  constructor(name, sessionId) {\r\n    console.log(\"goalsmanager instanciated and redy\");\r\n    this.name = name;\r\n    this.sessionId = sessionId;\r\n    this.dataObj = JSON.parse(localStorage.getItem(\"session-goals\"));\r\n    this.info = \"\";\r\n    this.sessionIndex;\r\n    this.goalIndex;\r\n    this.done;\r\n    this.resetted = false; // is anyway not accessed from the check if not alredy checked\r\n    this.lastEnter = 0;\r\n  }\r\n\r\n  //localStorage.removeItem(key);\r\n\r\n  goalStatus() {\r\n    // GOAL STATUS\r\n    if (this.name !== \"goal-info-input\" && this.sessionId) {\r\n      ////////////////////  ^-----   SCREEN FOR BUGS   ////////////////////////////////\r\n      let status;\r\n      this.dataObj.forEach((session, index) => {\r\n        if (session.sessionId === this.sessionId) {\r\n          this.sessionIndex = index;\r\n        }\r\n        // searching for a goal, looping throught the {session:\"123\" , goals:[]}\r\n        session.goals.forEach((g, i) => {\r\n          // find which index is this goal\r\n          if (g.name === this.name) {\r\n            //remember index\r\n            this.goalIndex = i;\r\n            /// check for last time !!!!\r\n            const tenSeconds = 1000 * 10;\r\n            if (Date.now() - g.last > tenSeconds * 6) {\r\n              console.log(\"time check ok\");\r\n              if (!g.done) {\r\n                //to check as done\r\n                this.done = true;\r\n              } else if (g.done) {\r\n                this.resetted = true;\r\n                //to check as reminded\r\n              }\r\n              this.lastEnter = Date.now();\r\n              status = true;\r\n            } else {\r\n              console.log(\"something wrong:   date.now was to near  \");\r\n              status = false;\r\n            }\r\n          }\r\n        });\r\n      });\r\n      return status;\r\n      /////////////////////screen for bugs -- keep -- ///////-------v\r\n    } else {\r\n      console.log(\"something wrong:     first screen not passed\");\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // UPDATE STATE GOAL\r\n  writeGoal(newInfo) {\r\n    const info = newInfo || \"\";\r\n    this.info = info;\r\n\r\n    if (this.goalStatus()) {\r\n      //getting reference from stored object from the local storage\r\n      const newObject = {\r\n        name: this.name,\r\n        done: this.done,\r\n        resetted: this.resetted,\r\n        info: this.info,\r\n        last: this.lastEnter\r\n      };\r\n\r\n      this.dataObj[this.sessionIndex].goals[this.goalIndex] = newObject;\r\n      localStorage.setItem(\"session-goals\", JSON.stringify(this.dataObj));\r\n      return newObject;\r\n    }\r\n  }\r\n\r\n  // GET GOALS\r\n  getGoals() {\r\n    let goals = [];\r\n    const itemArr = JSON.parse(localStorage.getItem(\"session-goals\"));\r\n    console.log(itemArr);\r\n    // loop to check for .goals.length;\r\n    for (let i in itemArr) {\r\n      if (itemArr[i].goals.length > 0) {\r\n        goals.push(itemArr[i]);\r\n      }\r\n    }\r\n\r\n    return goals;\r\n  }\r\n\r\n  // DELETE SINGLE GOAL\r\n  deleteGoal(name) {\r\n    let sessionIndex;\r\n    let goalIndex;\r\n    const itemArr = JSON.parse(localStorage.getItem(\"session-goals\"));\r\n    // search throught\r\n    itemArr.forEach((session, i) => {\r\n      session.goals.forEach((goal, ind) => {\r\n        console.log(i, ind);\r\n        if (goal.name === name) {\r\n          // remember the indexes\r\n          sessionIndex = i;\r\n          goalIndex = ind;\r\n        }\r\n      });\r\n    });\r\n\r\n    //removing from goals array with indexes\r\n    itemArr[sessionIndex].goals.splice([goalIndex], 1);\r\n\r\n    // if no goals remove the session object from array\r\n    if (itemArr[sessionIndex].goals.length < 1) {\r\n      itemArr.splice([sessionIndex], 1);\r\n    }\r\n\r\n    //reset storage\r\n    localStorage.setItem(\"session-goals\", JSON.stringify(itemArr));\r\n\r\n    return itemArr;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///./dist/js/GoalsManager/index.js?");

/***/ }),

/***/ "./dist/js/Templates/functionTemplates.js":
/*!************************************************!*\
  !*** ./dist/js/Templates/functionTemplates.js ***!
  \************************************************/
/*! exports provided: fillResultFromRecord, fillResultFromGoal */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fillResultFromRecord\", function() { return fillResultFromRecord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fillResultFromGoal\", function() { return fillResultFromGoal; });\n/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions */ \"./dist/js/actions/index.js\");\n\r\n\r\nconst fillResultFromRecord = recordObj => {\r\n  // takes the object and returns a template\r\n  const theDate = new Date(recordObj.date).toLocaleString();\r\n  const jsonString = JSON.stringify(recordObj);\r\n  const bgClass = recordObj.checked === \"true\" ? \"checked\" : \"\";\r\n\r\n  // if comes from backend get is-crypt attr\r\n  const isCryptAttr = () => {\r\n    // getting one attribute undefined if msg comes from backend\r\n    if (recordObj.alarm === undefined) {\r\n      return `is-crypt=${recordObj.id}`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  console.log(recordObj);\r\n\r\n  // taking the numers of the session give border color\r\n  const sessionBorder = () => {\r\n    let style;\r\n    let sessionNumbers;\r\n    // the encrypted string should be tested to be NaN..\r\n    if (isNaN(recordObj.sessionId)) {\r\n      console.log(recordObj.sessionId);\r\n      sessionNumbers = \"999999\";\r\n    } else {\r\n      sessionNumbers = recordObj.sessionId\r\n        .toString()\r\n        .split(\"\")\r\n        .splice(recordObj.sessionId.length - 6, recordObj.sessionId.length)\r\n        .join(\"\");\r\n    }\r\n    style = `style=\"\r\n    border-right:5px solid #${sessionNumbers}; \r\n    border-bottom: 1px solid #${sessionNumbers};\r\n    \"`;\r\n\r\n    return style;\r\n  };\r\n\r\n  //see if current session using get sessionid\r\n  const checkSession = () => {\r\n    if (Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"getIdSession\"])() === recordObj.sessionId) {\r\n      return \"Current Session\";\r\n    } else {\r\n      const date = new Date(parseInt(recordObj.sessionId))\r\n        .toLocaleString()\r\n        .substr(0, 9);\r\n      return date;\r\n    }\r\n  };\r\n\r\n  // display goals with textfield and button to update goal\r\n  const insertGoals = () => {\r\n    const storedArray = JSON.parse(localStorage.getItem(\"session-goals\"));\r\n    if (storedArray) {\r\n      let goals;\r\n      // loop throught sessions {sessionId:12345, goals[]}\r\n      for (let i in storedArray) {\r\n        //check which is the session\r\n        if (recordObj.sessionId === storedArray[i].sessionId) {\r\n          // if this session Object has ever had goals, they are displayed\r\n          goals = [...storedArray[i].goals];\r\n        }\r\n      }\r\n\r\n      //if for this session there are goals;\r\n      if (goals) {\r\n        let result = goals.map(\r\n          goal =>\r\n            ` \r\n            <form onsubmit=\"return false\" loading-id=\"form-info-goal\" class=\"the-form\">\r\n            <span\r\n              class=\"result-record-onegoal ${goalStyle(\r\n                goal.done,\r\n                goal.resetted\r\n              )}\"\r\n              session-id=\"${recordObj.sessionId}\"\r\n              loading-id=\"${goal.name}\"\r\n            >\r\n              ${goal.name}\r\n\r\n            </span>\r\n            <br />\r\n      \r\n            <input\r\n              loading-id=\"goal-info-input\"\r\n              type=\"text\"\r\n              name=\"infogoal\"\r\n              class=\"result-record-textfield\"\r\n            />\r\n            <input type=\"submit\" loading-id=\"goal-info-input\" name=\"submit\" class=\"btn-submit-goals\" />\r\n          </form>\r\n          \r\n            `\r\n        );\r\n        return `\r\n        <span loading-id=\"goals-listener\" class=\"result-record-goals\">\r\n          ${result.join(\"\")}\r\n        </span>\r\n        `;\r\n        //make span line\r\n      } else {\r\n        //if no goals for this session return an empty string\r\n        return \"  ----> no goals\";\r\n      }\r\n    } else {\r\n      // no local storage\r\n      return \"---> no goals\";\r\n    }\r\n  };\r\n\r\n  // style goals with his vslue\r\n  const goalStyle = (done, resetted) => {\r\n    let resClass = \"goal\";\r\n    if (done && !resetted) {\r\n      resClass = \"green\";\r\n    }\r\n    if (resetted) {\r\n      resClass = \"red\";\r\n    }\r\n    return resClass; //different class or styles for different value\r\n  };\r\n\r\n  // true if is an alarm\r\n  const isAlarm = recordObject => {\r\n    if (recordObject.alarm) {\r\n      if (recordObj.alarm !== \"\" || recordObj.body === \"\") {\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  // other styling for alarms set\r\n  const setAlarmStyle = recordObj => {\r\n    if (isAlarm(recordObj)) {\r\n      //return a class for alarm\r\n      return \"alarm\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  return `\r\n  <div class=\"result-record-container ${bgClass} ${setAlarmStyle(\r\n    recordObj\r\n  )}\" json-data='${jsonString}' loading-id=\"result-record-${\r\n    recordObj.id\r\n  }\"  ${sessionBorder()}   >\r\n\r\n    <h6 class=\"result-record-session\" >${\r\n      isAlarm(recordObj) ? \"ALARM\" : checkSession()\r\n    }  </h6>\r\n\r\n    <small class=\"result-record-goals\"> ${insertGoals()} </small>\r\n    <h3 class=\"result-record-title\" crypt >${recordObj.title}</h3>\r\n\r\n    <!--\r\n\r\n    ${\r\n      isAlarm(recordObj) || isCryptAttr() !== \"\"\r\n        ? \"\"\r\n        : '<button class=\"result-record-btn-marktext\" loading-id=\"select-highlighted\">selext</button>'\r\n    }\r\n    -->\r\n    \r\n    <p class=\"result-record-body\" crypt>${recordObj.body}</p>\r\n\r\n    <span class=\"result-record-date\" crypt-date crypt loading-id=\"${\r\n      recordObj.date\r\n    }\">${theDate}</span>\r\n\r\n    <span class=\"result-record-marked\" loading-id=\"check-record-${\r\n      recordObj.id\r\n    }\"> ${\r\n    recordObj.checked === \"false\"\r\n      ? \"<span class='goal result-record-marked-text'>...</span>\"\r\n      : \"<span class='red result-record-marked-text'>IMPORTANT!</span>\"\r\n  }</span>\r\n\r\n    <span class=\"result-record-delete\">\r\n      \r\n      <button  ${isCryptAttr()} class=\"btn-record-delete\" loading-id=\"delete-record-${\r\n    recordObj.id\r\n  }\">DELETE</button>\r\n      \r\n    </span>\r\n  \r\n    </div>\r\n  `;\r\n};\r\n\r\n//#####################################################################################################################################################\r\n//####################################################################################################################################################\r\n//####################################################################################################################################################\r\n//####################################################################################################################################################\r\n\r\nconst fillResultFromGoal = obj => {\r\n  const btnStatus = goal => {\r\n    const js = JSON.stringify(goal);\r\n\r\n    console.log(js);\r\n    if (goal.resetted) {\r\n      return `\r\n      <form\r\n        session-id=\"${obj.sessionId}\"\r\n        info-obj='${js}'\r\n        onsubmit=\"return false\"\r\n        loading-id=\"form-info-goal\"\r\n        class=\"the-form\"\r\n      >\r\n        <input\r\n          loading-id=\"goal-info-inputField\"\r\n          type=\"text\"\r\n          name=\"infogoal\"\r\n          class=\"goal-info-inputField\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          loading-id=\"goal-info-submit\"\r\n          name=\"submit\"\r\n          class=\"btn-submit-goals\"\r\n          value=\"x\"\r\n        />\r\n        </form>\r\n        `;\r\n    }\r\n    if (goal.done) {\r\n      return `\r\n      <form\r\n        session-id=\"${obj.sessionId}\"\r\n        info-obj='${js}'\r\n        onsubmit=\"return false\"\r\n        loading-id=\"form-info-goal\"\r\n        class=\"the-form\"\r\n      >\r\n        <input\r\n          loading-id=\"goal-info-inputField\"\r\n          type=\"text\"\r\n          name=\"infogoal\"\r\n          class=\"goal-info-inputField\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          loading-id=\"goal-info-submit\"\r\n          name=\"submit\"\r\n          class=\"btn-submit-goals\"\r\n          value=\"Unset\"\r\n        />\r\n        </form>\r\n        `;\r\n    } else {\r\n      return `\r\n      <form\r\n      session-id=\"${obj.sessionId}\"\r\n      info-obj='${js}'\r\n      onsubmit=\"return false\"\r\n      loading-id=\"form-info-goal\"\r\n      class=\"the-form\"\r\n    >\r\n      <input\r\n        loading-id=\"goal-info-inputField\"\r\n        type=\"text\"\r\n        name=\"infogoal\"\r\n        class=\"goal-info-inputField\"\r\n      />\r\n      <input\r\n        type=\"submit\"\r\n        loading-id=\"goal-info-submit\"\r\n        name=\"submit\"\r\n        class=\"btn-submit-goals\"\r\n        value=\"Done !\"\r\n      />\r\n      </form>\r\n      `;\r\n    }\r\n  };\r\n\r\n  const getStauts = goal => {\r\n    if (goal.resetted) {\r\n      return '<span class=\"red result-goals-status\">Goal Resetted</span>';\r\n    }\r\n    if (goal.done) {\r\n      return '<span class=\"green result-goals-status\">Goal Done</span>';\r\n    } else {\r\n      return '<span class=\"goal result-goals-status\">Goal To Do</span>';\r\n    }\r\n  };\r\n\r\n  const sessionBorder = () => {\r\n    let style;\r\n    let sessionNumbers;\r\n    // the encrypted string should be tested to be NaN..\r\n    if (isNaN(obj.sessionId)) {\r\n      console.log(obj.sessionId);\r\n      sessionNumbers = \"999999\";\r\n    } else {\r\n      sessionNumbers = obj.sessionId\r\n        .toString()\r\n        .split(\"\")\r\n        .splice(obj.sessionId.length - 6, obj.sessionId.length)\r\n        .join(\"\");\r\n    }\r\n    style = `style=\"\r\n    border-right:5px solid #${sessionNumbers}; \r\n    border-bottom: 1px solid #${sessionNumbers};\r\n    \"`;\r\n\r\n    return style;\r\n  };\r\n\r\n  const goalsInfo = goals => {\r\n    let result = goals.map(\r\n      g => `\r\n      <div class=\"result-goals-wrap loading-id=\"${g.name}\">\r\n        <h3 class=\"result-goals-name\">${g.name}</h3>\r\n        <span class=\"result-goals-status\">${getStauts(g)}</span>\r\n        <span class=\"result-goals-status-btn\">${btnStatus(g)}</span>\r\n        \r\n        <span class=\"result-goals-delete\">\r\n          <button class=\"btn-record-delete\" sessionId=\"${\r\n            obj.sessionId\r\n          }\" loading-id=\"delete-goal\" info=\"${g.name}\">delete</button>\r\n        </span>\r\n\r\n        <p class=\"result-goals-info\">${g.info}</p>\r\n      </div>`\r\n    );\r\n    return result.join(\"\");\r\n  };\r\n\r\n  // main\r\n  return `<div class=\"result-goals-display loading-id=\"result-goal\"\" ${sessionBorder()}>\r\n\r\n    <h3 class=\"result-goals-title\">\r\n    ${new Date(parseInt(obj.sessionId)).toLocaleString().substr(0, 9)}\r\n      </h3>\r\n  \r\n    ${goalsInfo(obj.goals)}\r\n  \r\n  </div>`;\r\n};\r\n\n\n//# sourceURL=webpack:///./dist/js/Templates/functionTemplates.js?");

/***/ }),

/***/ "./dist/js/Templates/index.js":
/*!************************************!*\
  !*** ./dist/js/Templates/index.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Templates; });\n/* harmony import */ var _templatesArr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./templatesArr */ \"./dist/js/Templates/templatesArr.js\");\n/* harmony import */ var _functionTemplates__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./functionTemplates */ \"./dist/js/Templates/functionTemplates.js\");\n\r\n\r\n\r\nclass Templates {\r\n  constructor() {\r\n    this.template = \"\";\r\n  }\r\n\r\n  //looking in the templates array the right template for this element of the current page\r\n  matchTemplate(templatesArr, toset) {\r\n    // looping throught an pbject of the templates seeing which has the attribute.. and take the html\r\n    templatesArr.forEach(templateObj => {\r\n      if (templateObj.name === toset) {\r\n        this.template = templateObj.html;\r\n        return this.template;\r\n      }\r\n    });\r\n    // if no template found in the array of templatesArr return the template\r\n    return this.template;\r\n  }\r\n\r\n  getAssignedHtml(ph) {\r\n    // taking current page to match the name of the template in templatesArray\r\n    const toset = ph.getCurrentPage();\r\n    // returns the template found\r\n    return this.matchTemplate(_templatesArr__WEBPACK_IMPORTED_MODULE_0__[\"templatesArr\"], toset);\r\n  }\r\n\r\n  // resultSet comes from the action, passed with ph in the view, in case of result component to update passes the result set\r\n  getResultElements(resultSet, ph) {\r\n    // getting the result set from the page handler, loop throught the array and generate tempplate for each element,\r\n    this.template = \"\";\r\n    if (ph.getCurrentPage() === \"LOAD-RESULTS\") {\r\n      resultSet.forEach(obj => {\r\n        // somehow pass the obkect and return the template\r\n        this.template += Object(_functionTemplates__WEBPACK_IMPORTED_MODULE_1__[\"fillResultFromRecord\"])(obj);\r\n      });\r\n    } else if (ph.getCurrentPage() === \"LOAD-GOALS\") {\r\n      resultSet.forEach(obj => {\r\n        // somehow pass the obkect and return the template\r\n        this.template += Object(_functionTemplates__WEBPACK_IMPORTED_MODULE_1__[\"fillResultFromGoal\"])(obj);\r\n      });\r\n    }\r\n    return this.template;\r\n  }\r\n\r\n  refreshSubtitle(page) {\r\n    this.template = \"NO Subtitle\";\r\n    _templatesArr__WEBPACK_IMPORTED_MODULE_0__[\"templatesArr\"].forEach(templateObj => {\r\n      console.log(templateObj.name);\r\n\r\n      if (templateObj.name === page) {\r\n        this.template = templateObj.subtitle;\r\n      }\r\n    });\r\n\r\n    return this.template;\r\n  }\r\n\r\n  // end class\r\n}\r\n\n\n//# sourceURL=webpack:///./dist/js/Templates/index.js?");

/***/ }),

/***/ "./dist/js/Templates/templatesArr.js":
/*!*******************************************!*\
  !*** ./dist/js/Templates/templatesArr.js ***!
  \*******************************************/
/*! exports provided: templatesArr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"templatesArr\", function() { return templatesArr; });\nconst templatesArr = [\r\n  // FIRST WRAPPER MUST HAVE THE LOADING-ID ATTRIBUTE TO CALL THE FUNCTION FROM THE FORM\r\n  {\r\n    name: \"INSERT-DATA\",\r\n    html: `\r\n    <div class=\"form-wrap\" loading-id=\"INSERT-DATA\"> \r\n      \r\n      <div class=\"form-group form-group-input\">\r\n          <input loading-id=\"title\" type=\"text\" name=\"title\" placeholder=\"title\" class=\"form-input-textfield\" />\r\n      </div>\r\n\r\n      <div class=\"form-group form-group-body\">\r\n          <textarea\r\n          class=\"form-input-textarea\"\r\n          loading-id=\"body\"\r\n          type=\"text\"\r\n          name=\"body\"\r\n          placeholder=\"body\"\r\n        /></textarea>\r\n    \r\n      </div>\r\n\r\n      <div class=\"form-group form-group-submit\">\r\n          <input\r\n          type=\"submit\"\r\n          name=\"submit\"\r\n          value=\"submit\"\r\n          class=\"form-input-submit\"\r\n          />\r\n      </div>\r\n    \r\n    </div>\r\n    `,\r\n    subtitle: \"Add records to remember!\"\r\n  },\r\n  // FIRST WRAPPER MUST HAVE THE LOADING-ID ATTRIBUTE TO CALL THE FUNCTION FROM THE FORM\r\n  {\r\n    name: \"SEARCH-DATA\",\r\n    html: `\r\n    <div class=\"form-wrap\" loading-id=\"SEARCH-DATA\"> \r\n\r\n      <div class=\"form-group form-group-input-search\">\r\n          <input loading-id=\"input-search\" type=\"text\" name=\"search\" class=\"form-input-textfield\" />\r\n      </div>\r\n      \r\n      <div class=\"form-group form-group-submit\">\r\n          <input\r\n          type=\"submit\"\r\n          name=\"submit\"\r\n          value=\"ALL\"\r\n          class=\"form-input-submit\"\r\n          />\r\n      </div>\r\n\r\n      <div class=\"form-group form-group-info-search\">\r\n        <p class=\"form-info-text\"> Type something in the field to serch throught your records. The search works also for values of the date and time, then you can directly search a date in the field, a part of it, a part of the title or body of your record, to get the info you need! </p>\r\n      </div>\r\n      \r\n    </div>\r\n    `,\r\n    subtitle: \"Search between al your records!\"\r\n  },\r\n  // FIRST WRAPPER MUST HAVE THE LOADING-ID ATTRIBUTE TO CALL THE FUNCTION FROM THE FORM\r\n  {\r\n    name: \"LOAD-SESSION-GOAL\",\r\n    html: `\r\n    <div class=\"form-wrap\" loading-id=\"LOAD-SESSION-GOAL\"> \r\n\r\n      <div class=\"form-group form-group-input\">\r\n          <input loading-id=\"session-goal-input\" type=\"text\" name=\"goal\" class=\"form-input-textfield\" />\r\n      </div>\r\n      \r\n      <div class=\"form-group form-group-setgoal\">\r\n          <input\r\n          type=\"submit\"\r\n          name=\"submit\"\r\n          value=\"set Goal\"\r\n          class=\"form-input-submit\"\r\n          />\r\n      </div>\r\n      \r\n      <div class=\"form-group form-group-manage-goal\">\r\n        <button class=\"btn-load-goals\" loading-id=\"load-goals\" >MANAGE GOALS</button>\r\n      </div>\r\n    \r\n\r\n      <div class=\"form-group form-group-info\">\r\n        <p class=\"form-info-text\">\r\n          Click <b>Manage Goals</b> to <b>display</b> all the goal set until now, in which session and the status of the goal, so u can set the goal done or change idea and reset it, in every case you can leave a message about your choice\r\n        </p>\r\n      </div>\r\n      \r\n\r\n      </div>\r\n    `,\r\n    subtitle: \"Manage your goals!\"\r\n  },\r\n  // FIRST WRAPPER MUST HAVE THE LOADING-ID ATTRIBUTE TO CALL THE FUNCTION FROM THE FORM\r\n  {\r\n    name: \"LOAD-ALARM-INPUT\",\r\n    html: `\r\n    <div class=\"form-wrap\" loading-id=\"LOAD-ALARM-INPUT\"> \r\n    \r\n      <div class=\"form-group form-group-input\">\r\n          <input loading-id=\"alarm-name\" type=\"text\" name=\"alarm-name\" placeholder=\"alarm\" class=\"form-input-textfield\" />\r\n      </div>\r\n    \r\n      <div class=\"form-group form-group-input-date\">\r\n          <input loading-id=\"alarm-day\" type=\"date\" name=\"alarm-day\" class=\"form-input-date\" />\r\n      </div>\r\n      \r\n      <div class=\"form-group form-group-input-hour\">\r\n\r\n          <label for=\"alarm-time-hours\" class=\"form-input-radio-label\">Hr:</label>\r\n          <input loading-id=\"alarm-time-hours\"  type=\"number\" name=\"alarm-time-hours\" placeholder=\"00\" min=\"0\" max=\"23\" class=\"form-input-radio\" />\r\n      \r\n          <label for=\"alarm-time-minutes\" class=\"form-input-radio-label\">Min:</label>\r\n          <input loading-id=\"alarm-time-minutes\"  type=\"number\" name=\"alarm-time-minutes\" placeholder=\"00\" min=\"0\" max=\"59\" class=\"form-input-radio\" />\r\n          \r\n      </div>\r\n\r\n      <div class=\"form-group form-group-submit\">\r\n          <input\r\n          type=\"submit\"\r\n          name=\"submit\"\r\n          value=\"submit\"\r\n          class=\"form-input-submit\"\r\n          />\r\n      </div>\r\n\r\n\r\n      <div class=\"form-group form-group-info\">\r\n        <p class=\"form-info-text\"> Leave a message for later, and get notified when the time is gone! </p>\r\n      </div>\r\n      \r\n\r\n\r\n    </div>\r\n    `,\r\n    subtitle: \"Set an alarm for later!\"\r\n  },\r\n  // FIRST WRAPPER MUST HAVE THE LOADING-ID ATTRIBUTE TO CALL THE FUNCTION FROM THE FORM\r\n  {\r\n    name: \"LOAD-CRYPT-OPT\",\r\n    html: `\r\n    <div class=\"form-wrap\" loading-id=\"LOAD-CRYPT-OPT\"> \r\n\r\n      <div class=\"form-group form-group-input-crypt\">\r\n        <input\r\n          loading-id=\"crypt-field-title\"\r\n          type=\"text\"\r\n          name=\"infogoal\"\r\n          class=\"form-input-textfield-crypt\"\r\n        />\r\n      </div>\r\n\r\n        <div class=\"form-group form-group-body\">\r\n        <textarea\r\n          loading-id=\"crypt-textarea-input\"\r\n          type=\"text\"\r\n          name=\"crypt\"\r\n          class=\"form-input-textarea\"\r\n        /></textarea>\r\n      </div>\r\n\r\n      <div class=\"form-group form-group-input-crypt\">\r\n        <input\r\n          loading-id=\"crypt-field-key\"\r\n          placeholder=\"Your Key\"\r\n          type=\"text\"\r\n          name=\"infogoal\"\r\n          class=\"form-input-textfield-crypt\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"form-group form-group-submit\">\r\n        <input\r\n          type=\"submit\"\r\n          loading-id=\"crypt-submit\"\r\n          name=\"submit\"\r\n          class=\"btn-submit-form-crypt\"\r\n        />\r\n      </div>\r\n\r\n\r\n    </div>\r\n    `,\r\n    subtitle: \"Crypt and Decrypt with your Key!\"\r\n  }\r\n\r\n  // FIRST WRAPPER MUST HAVE THE LOADING-ID ATTRIBUTE TO CALL THE FUNCTION FROM THE FORM\r\n\r\n  // FIRST WRAPPER MUST HAVE THE LOADING-ID ATTRIBUTE TO CALL THE FUNCTION FROM THE FORM\r\n  // FIRST WRAPPER MUST HAVE THE LOADING-ID ATTRIBUTE TO CALL THE FUNCTION FROM THE FORM\r\n\r\n  // FIRST WRAPPER MUST HAVE THE LOADING-ID ATTRIBUTE TO CALL THE FUNCTION FROM THE FORM\r\n];\r\n\n\n//# sourceURL=webpack:///./dist/js/Templates/templatesArr.js?");

/***/ }),

/***/ "./dist/js/View/index.js":
/*!*******************************!*\
  !*** ./dist/js/View/index.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return View; });\n/* harmony import */ var _Templates__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Templates */ \"./dist/js/Templates/index.js\");\n\r\n\r\nclass View {\r\n  constructor() {}\r\n\r\n  fill(array, ph = null) {\r\n    // looping throught the interested elements\r\n    let value;\r\n    array.forEach(domElement => {\r\n      // removing old elements\r\n      domElement.innerHTML = \"\";\r\n      // getting the page to send for the tmeplate\r\n      const interestedAttribute = domElement.attributes[\"loading-id\"].value;\r\n      // see which template matches the attributes and return the right html for this element\r\n      switch (interestedAttribute) {\r\n        case \"result-container\":\r\n          //get dinamic template from object\r\n          // get the template with results from the pages handler\r\n          if (false) {} else {\r\n            const resultSet = ph.getResultSet();\r\n            value = _Templates__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.getResultElements(resultSet, ph);\r\n            value ? (domElement.innerHTML = value) : null;\r\n          }\r\n          break;\r\n        case \"form-commands\":\r\n          // get static templates\r\n          value = _Templates__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.getAssignedHtml(ph);\r\n          // set the template as content of the dom element in scope  ---  domElement  --\r\n          value ? (domElement.innerHTML = value) : null;\r\n\r\n          break;\r\n        case \"subtitle\":\r\n          // get static templates\r\n          const page = ph.getCurrentPage();\r\n          value = _Templates__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.refreshSubtitle(page);\r\n          value ? (domElement.innerHTML = value) : null;\r\n\r\n          break;\r\n        default:\r\n          console.log(\"ERROR : switch in View/index.js does not work fine\");\r\n          console.log(\" A VIEW FOR THIS ATTRIBUTE IS NOT SET in class View\");\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack:///./dist/js/View/index.js?");

/***/ }),

/***/ "./dist/js/actions/crypt.js":
/*!**********************************!*\
  !*** ./dist/js/actions/crypt.js ***!
  \**********************************/
/*! exports provided: getCryptAll, addCryptRecord, loadCryptOptions, deleteCryptRecord */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCryptAll\", function() { return getCryptAll; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addCryptRecord\", function() { return addCryptRecord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadCryptOptions\", function() { return loadCryptOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteCryptRecord\", function() { return deleteCryptRecord; });\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../View */ \"./dist/js/View/index.js\");\n/* harmony import */ var _pages_pageHandler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pages/pageHandler */ \"./dist/js/pages/pageHandler.js\");\n/* harmony import */ var _pages_domSelector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pages/domSelector */ \"./dist/js/pages/domSelector.js\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../util */ \"./util/index.js\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index */ \"./dist/js/actions/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst PROXY = \"https://pryvapp.herokuapp.com\";\r\nconst DEV = \"http://localhost:5000\";\r\n\r\n// AJAX GET REQUEST\r\nconst getCryptAll = () => {\r\n  console.log(\"crypt all\");\r\n  const token = document\r\n    .querySelector(\"[loading-id=footer]\")\r\n    .getAttribute(\"token\");\r\n\r\n  var request = new XMLHttpRequest();\r\n  request.open(\"GET\", `${DEV}/api/records/mcsrg`, true);\r\n  request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n  request.setRequestHeader(\"Authorization\", token);\r\n  request.onload = () => {\r\n    // do something here\r\n    const myArr = JSON.parse(request.responseText);\r\n    console.log(myArr);\r\n    // load result\r\n    const view = new _View__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n    const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n\r\n    ph.setCurrentPage(\"LOAD-RESULTS\");\r\n    ph.setResultSet(myArr);\r\n    const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_2__[\"domSelector\"])(ph.getCurrentPage());\r\n    view.fill(elementsArray, ph);\r\n  };\r\n\r\n  request.send();\r\n};\r\n\r\n// AJAX POST REQUEST WITH TOKEN\r\nconst addCryptRecord = form => {\r\n  const title = form.querySelector(\"[loading-id=crypt-field-title]\").value;\r\n  const body = form.querySelector(\"[loading-id=crypt-textarea-input]\").value;\r\n  const key = form.querySelector(\"[loading-id=crypt-field-key]\").value;\r\n  const sessionId = Object(_index__WEBPACK_IMPORTED_MODULE_4__[\"getIdSession\"])();\r\n\r\n  const stringDate = new Date(Date.now()).toLocaleString();\r\n  console.log(stringDate);\r\n  const date = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"crypt\"])(stringDate, key);\r\n\r\n  // GET TOKEN\r\n  const token = document\r\n    .querySelector(\"[loading-id=footer]\")\r\n    .getAttribute(\"token\");\r\n\r\n  // build object for request\r\n  const data = {\r\n    title,\r\n    body,\r\n    date,\r\n    sessionId\r\n  };\r\n\r\n  //REQUEST\r\n  var request = new XMLHttpRequest();\r\n  request.open(\"POST\", `${DEV}/api/records/mcsrg`, true);\r\n  //set header\r\n  request.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n  // set token\r\n  request.setRequestHeader(\"Authorization\", token);\r\n  // set what to fo with response\r\n  request.onload = () => {\r\n    // do something here\r\n    console.log(request.responseText);\r\n    getCryptAll();\r\n  };\r\n  // send data\r\n  request.send(JSON.stringify(data));\r\n};\r\n\r\n///    C R Y P T           LOAD-CRYPT-OPT  LOAD FORM LOAD FORM      LOAD-CRYPT-OPT\r\n\r\nconst loadCryptOptions = () => {\r\n  // instanciate classes\r\n  const view = new _View__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n  const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n\r\n  // set the new page to load\r\n  ph.setCurrentPage(\"LOAD-CRYPT-OPT\");\r\n  // take the element wanted and prepare layout with page\r\n  const page = ph.getCurrentPage();\r\n  const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_2__[\"domSelector\"])(page);\r\n\r\n  // creating the results\r\n  view.fill(elementsArray, ph);\r\n\r\n  // adding event listeners for the textarea\r\n  const form = document.querySelector(\"[loading-id=form-commands]\");\r\n  if (form) {\r\n    const keyInput = form.querySelector(\"[loading-id=crypt-field-key]\");\r\n    keyInput.addEventListener(\"keyup\", liveCryptOnTyping);\r\n  }\r\n\r\n  if (!document.querySelector(\"[form-crypt=show]\")) {\r\n    // ADDING A FORM TO DECRYPT THE MESSAGE\r\n    const subForm = document.createElement(\"form\");\r\n    subForm.setAttribute(\"form-crypt\", \"show\");\r\n    subForm.classList.add(\"form-decrypt-records\");\r\n\r\n    //create and feed input\r\n    const crynput = document.createElement(\"input\");\r\n    crynput.setAttribute(\"loading-id\", \"crynput\");\r\n    crynput.classList.add(\"form-decrypt-records-field\");\r\n    crynput.setAttribute(\"type\", \"text\");\r\n    crynput.setAttribute(\"placeholder\", \"Your Key\");\r\n\r\n    //create button\r\n    const submit = document.createElement(\"input\");\r\n    submit.setAttribute(\"type\", \"submit\");\r\n    submit.classList.add(\"btn-submit-decrypt-records\");\r\n    submit.setAttribute(\"value\", \"load records\");\r\n\r\n    // feed form\r\n    subForm.appendChild(crynput);\r\n    subForm.appendChild(submit);\r\n\r\n    // loading reasults func\r\n    subForm.addEventListener(\"submit\", e => {\r\n      e.preventDefault();\r\n      // load results on click\r\n      console.log(\"load results\");\r\n      crynput.value = \"\";\r\n      getCryptAll();\r\n      return false;\r\n    });\r\n\r\n    // append it to the document\r\n    document\r\n      .querySelector(\"[loading-id=subtitle-container]\")\r\n      .appendChild(subForm);\r\n\r\n    //event listener decryption\r\n    crynput.addEventListener(\"keyup\", uncovresult);\r\n  }\r\n  //\r\n};\r\n\r\nfunction liveCryptOnTyping(e) {\r\n  const key = e.target.value;\r\n  const textArea = document.querySelector(\"[loading-id=crypt-textarea-input]\");\r\n  const inputTitle = document.querySelector(\"[loading-id=crypt-field-title]\");\r\n  // IF NEVER WRITTEN IN THE TEXT REMEMBER THE FIRST UNENCRYPTED TEXT\r\n  if (e.key !== \"Backspace\") {\r\n    if (key.length <= 1) {\r\n      //the keyfield was empty\r\n      textArea.setAttribute(\"remember-text\", textArea.value);\r\n      inputTitle.setAttribute(\"remember-text\", inputTitle.value);\r\n\r\n      console.log(\"SET ATTRIBITE\" + textArea.getAttribute(\"remember-text\"));\r\n    }\r\n  }\r\n  // getting values\r\n  const text1 = textArea.getAttribute(\"remember-text\");\r\n  const text2 = inputTitle.getAttribute(\"remember-text\");\r\n\r\n  // convert values\r\n  const resultTextarea = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"crypt\"])(text1, key);\r\n  const resultTitle = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"crypt\"])(text2, key);\r\n\r\n  // IF THE KEYFIELD IS EMPTY RESET REMEMBERED TEXT\r\n  if (key.length < 2) {\r\n    textArea.value = textArea.getAttribute(\"remember-text\");\r\n    inputTitle.value = inputTitle.getAttribute(\"remember-text\");\r\n  } else {\r\n    textArea.value = resultTextarea;\r\n    inputTitle.value = resultTitle;\r\n  }\r\n}\r\n\r\n// decrypt result\r\nfunction uncovresult(e) {\r\n  console.log(e.target.value);\r\n  // select result items\r\n  const result = document.querySelector(\"[loading-id=result-container]\");\r\n  const allArr = result.querySelectorAll(\"[crypt]\");\r\n\r\n  const key = e.target.value;\r\n\r\n  // set an attribute to remember the data to encrypt\r\n  if (e.key !== \"Backspace\") {\r\n    if (key.length < 2) {\r\n      allArr.forEach(el => {\r\n        //take the other attribute and set as attribute\r\n        el.setAttribute(\"encr-text\", el.innerHTML);\r\n\r\n        //filter out the date\r\n        if (el.hasAttribute(\"crypt-date\")) {\r\n          el.setAttribute(\"encr-text\", el.getAttribute(\"loading-id\"));\r\n          // if el is span date\r\n        }\r\n\r\n        //\r\n      });\r\n      console.log(\"atribite set.. \");\r\n    }\r\n  }\r\n  // save the forst text\r\n\r\n  allArr.forEach(el => {\r\n    // set html\r\n    // IF THE KEYFIELD IS EMPTY RESET REMEMBERED TEXT\r\n    if (key.length < 2) {\r\n      // reset\r\n      console.log(\"key short\");\r\n      el.innerHTML = el.getAttribute(\"encr-text\");\r\n      console.log(el);\r\n    } else {\r\n      el.innerHTML = Object(_util__WEBPACK_IMPORTED_MODULE_3__[\"crypt\"])(el.getAttribute(\"encr-text\"), key);\r\n      console.log(\"key good\");\r\n      console.log(el);\r\n    }\r\n  });\r\n  //console.log(allArr);\r\n}\r\n\r\nfunction deleteCryptRecord(id) {\r\n  console.log(\"deleting..\" + id);\r\n  const token = document\r\n    .querySelector(\"[loading-id=footer]\")\r\n    .getAttribute(\"token\");\r\n  //REQUEST\r\n  var request = new XMLHttpRequest();\r\n  request.open(\"DELETE\", `${DEV}/api/records/mcsrg/${id}`, true);\r\n  //set header\r\n  request.setRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\r\n  // set token\r\n  request.setRequestHeader(\"Authorization\", token);\r\n  // set what to fo with response\r\n  request.onload = () => {\r\n    // do something here\r\n    console.log(request.responseText);\r\n\r\n    const parent = document.querySelector(`[loading-id=result-container]`);\r\n    const deleted = document.querySelector(`[loading-id=result-record-${id}]`);\r\n    parent.removeChild(deleted);\r\n  };\r\n  // send data\r\n  request.send();\r\n}\r\n\r\n//`/api/profile/handle/${handle}`\r\n// request to server with id and token\r\n\n\n//# sourceURL=webpack:///./dist/js/actions/crypt.js?");

/***/ }),

/***/ "./dist/js/actions/index.js":
/*!**********************************!*\
  !*** ./dist/js/actions/index.js ***!
  \**********************************/
/*! exports provided: loadRecords, insertRecord, loadSearchData, loadInsertData, deleteRecord, checkRecord, getIdSession, searchRecord, getHTMLOfSelection, loadInputsSessionGoal, setGoal, checkGoalFromRecord, loadInputAlarm, setAlarm, refreshResultGoals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadRecords\", function() { return loadRecords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insertRecord\", function() { return insertRecord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadSearchData\", function() { return loadSearchData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadInsertData\", function() { return loadInsertData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"deleteRecord\", function() { return deleteRecord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkRecord\", function() { return checkRecord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getIdSession\", function() { return getIdSession; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"searchRecord\", function() { return searchRecord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getHTMLOfSelection\", function() { return getHTMLOfSelection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadInputsSessionGoal\", function() { return loadInputsSessionGoal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setGoal\", function() { return setGoal; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkGoalFromRecord\", function() { return checkGoalFromRecord; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadInputAlarm\", function() { return loadInputAlarm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setAlarm\", function() { return setAlarm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"refreshResultGoals\", function() { return refreshResultGoals; });\n/* harmony import */ var _pages_domSelector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pages/domSelector */ \"./dist/js/pages/domSelector.js\");\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../View */ \"./dist/js/View/index.js\");\n/* harmony import */ var _pages_pageHandler__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pages/pageHandler */ \"./dist/js/pages/pageHandler.js\");\n/* harmony import */ var _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Calls/Calls */ \"./dist/js/Calls/Calls.js\");\n/* harmony import */ var _eventListeners__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../eventListeners */ \"./dist/js/eventListeners/index.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n// actions are called from the event listeners, must initiate an instance of view and ph to pass to the vieew changing the page\r\n\r\n/**\r\n *  THE PAGEHANDLER KEEPS THE PAGE AND THE RESULT SET; SO WHEN PASSED TO THE VIEW, THE VIEW HAS THE INFO TO GIVE TO THE SELECTED COMPONENTS\r\n * IN THE WAY HOW THE TEMPLATE IS IMPLEMENTED\r\n */\r\n\r\n// get the records from somewhere and paint the result\r\nconst loadRecords = () => {\r\n  const view = new _View__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n  const call = new _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n\r\n  const promise = call.getDataFromIndexedDb();\r\n  //result set must be  in the format [{id, title, body},{},...]\r\n  promise.then(data => {\r\n    /// first order the array!!\r\n    let sortedArray = sortObjectsByDate(data);\r\n    // console.log(sortedArray);\r\n    ph.setResultSet(sortedArray);\r\n    // set the new page to load\r\n    ph.setCurrentPage(\"LOAD-RESULTS\");\r\n    // take the element wanted and prepare layout with page\r\n    const page = ph.getCurrentPage();\r\n    const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_0__[\"domSelector\"])(page);\r\n    // the view needs this instance of the object to load the html template extracting the oject of records\r\n    view.fill(elementsArray, ph);\r\n    // gitve the new created elements a animation delay\r\n\r\n    sortedArray.forEach((el, i) => {\r\n      const id = el.id;\r\n      el = document.querySelector(`[loading-id=result-record-${id}]`);\r\n      if (el) {\r\n        el.style.animationDelay = `${i * 50}ms`;\r\n      }\r\n    });\r\n\r\n    console.log(\r\n      \"###############--------result refreshed-----------####################\"\r\n    );\r\n    Object(_eventListeners__WEBPACK_IMPORTED_MODULE_4__[\"goalListener\"])();\r\n  });\r\n};\r\n\r\n/*\r\n *   to search get the records and filter for the criteria\r\n */\r\n\r\nconst insertRecord = parentElement => {\r\n  // attribute is defied in the template\r\n  const title = parentElement.querySelector(\"[loading-id=title]\").value;\r\n  const body = parentElement.querySelector(\"[loading-id=body]\").value;\r\n\r\n  if (title === \"\" || title === \" \" || body === \"\" || body === \" \") {\r\n    console.log(\"something empty\");\r\n  } else {\r\n    // load needed classes\r\n    const call = new _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n\r\n    // session id\r\n\r\n    //\r\n    const sessionId = getIdSession();\r\n    console.log(sessionId);\r\n    // format record\r\n    const record = {\r\n      title,\r\n      body,\r\n      date: Date.now(),\r\n      checked: \"false\",\r\n      sessionId,\r\n      alarm: \"\"\r\n    };\r\n    // in this method of call get <-----------  initialized the DB\r\n    call.pushDataToIndexedDb(record);\r\n    // the call pushes to the indexed db the new record\r\n    loadRecords();\r\n    // load records gets all from the indexed db and reloads the page\r\n  }\r\n};\r\n\r\n/** IN DOM SELECTOR ARE DEFINED WHICH ELEMENTS ARE TO RELOAD WHEN CHANGING THE VIEW, ADDING SIMPLY AN ELEMENT TO THE ARRAY,\r\n * AND SPECIFYING IN THE VIEW HOW TO GET THE TEMPLATE.\r\n */\r\n\r\n// loads ONLY THE FORM WITH STATIC TEMPLATE\r\nconst loadSearchData = () => {\r\n  const view = new _View__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n  // set the new page to load\r\n  ph.setCurrentPage(\"SEARCH-DATA\");\r\n  // take the element wanted and prepare layout with page\r\n  const page = ph.getCurrentPage();\r\n  const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_0__[\"domSelector\"])(page);\r\n  // the view needs this instance of the object to load the html template extracting the oject of records\r\n  view.fill(elementsArray, ph);\r\n};\r\n\r\n// LOADS ONL THE FORM FROM STATIC TEMPLATEfor to insert the data\r\nconst loadInsertData = () => {\r\n  const view = new _View__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n  // set the new page to load\r\n  ph.setCurrentPage(\"INSERT-DATA\");\r\n  // take the element wanted and prepare layout with page\r\n  const page = ph.getCurrentPage();\r\n  const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_0__[\"domSelector\"])(page);\r\n  // the view needs this instance of the object to load the html template extracting the oject of records\r\n  view.fill(elementsArray, ph);\r\n};\r\n\r\nconst deleteRecord = id => {\r\n  const call = new _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n  call.deleteFromIndexedDb(id);\r\n  // deleting it directly from ui without loading the new view\r\n  const parent = document.querySelector(`[loading-id=result-container]`);\r\n  const deleted = document.querySelector(`[loading-id=result-record-${id}]`);\r\n  parent.removeChild(deleted);\r\n};\r\n\r\nconst checkRecord = id => {\r\n  const call = new _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n  // get infos for the object\r\n  const element = document.querySelector(`[loading-id=result-record-${id}]`);\r\n  let data = element.getAttribute(\"json-data\");\r\n  // preparing the object to update\r\n  data = JSON.parse(data);\r\n  // toggle the checked value\r\n\r\n  if (data.checked === \"true\") {\r\n    data.checked = \"false\";\r\n  } else {\r\n    data.checked = \"true\";\r\n  }\r\n\r\n  call.updateRecord(data);\r\n};\r\n\r\nconst sortObjectsByDate = arr => {\r\n  // take smallest date and insert as [0]of an array\r\n  return arr.sort((a, b) => b.date - a.date);\r\n};\r\n\r\nconst getIdSession = () => {\r\n  // check in local storage if there is\r\n  let storage = localStorage.getItem(\"current-session-id\");\r\n  let lastSessionEnter = localStorage.getItem(\"last-session-enter\");\r\n  const nowStr = Date.now().toString();\r\n\r\n  if (!storage || !lastSessionEnter) {\r\n    // set the first session id\r\n    localStorage.setItem(\"current-session-id\", nowStr);\r\n    localStorage.setItem(\"last-session-enter\", nowStr);\r\n    //console.log(\"item set in local storage ..\" + nowStr);\r\n    return nowStr;\r\n  } else {\r\n    // there is a current-session-id item in local storage\r\n    const currentSession = parseInt(storage);\r\n    const now = parseInt(nowStr);\r\n    const oneMinute = 60000; // 60 000 ms ---> 60 s\r\n    const oneHour = oneMinute * 60;\r\n    // if now is more then toWait from the last record enter , register new session\r\n\r\n    if (now - parseInt(lastSessionEnter) > oneHour * 8) {\r\n      //get a new id\r\n      localStorage.setItem(\"current-session-id\", nowStr);\r\n      localStorage.setItem(\"last-session-enter\", nowStr);\r\n      console.log(\"time is gone.. set new id \" + nowStr);\r\n      return nowStr;\r\n    } else {\r\n      // keep the last session id\r\n\r\n      localStorage.setItem(\"last-session-enter\", nowStr);\r\n      //  console.log(\"is about the same time.. keep id \" + storage);\r\n      return storage;\r\n    }\r\n  }\r\n};\r\n\r\nconst searchRecord = value => {\r\n  const view = new _View__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n  const call = new _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n\r\n  //only first time\r\n  const promise = call.getDataFromIndexedDb();\r\n  //result set must be  in the format [{id title body},{},...]\r\n  promise.then(data => {\r\n    /// first order the array!!\r\n    let sortedArray = sortObjectsByDate(data);\r\n    let leftArray = filterByValue(sortedArray, value);\r\n    console.log(leftArray);\r\n    ph.setResultSet(leftArray);\r\n    // set the new page to load\r\n    ph.setCurrentPage(\"LOAD-RESULTS\");\r\n    // take the element wanted and prepare layout with page\r\n    const page = ph.getCurrentPage();\r\n    const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_0__[\"domSelector\"])(page);\r\n    // the view needs this instance of the object to load the html template extracting the oject of records\r\n    view.fill(elementsArray, ph);\r\n  });\r\n};\r\n\r\nconst filterByValue = (arr, value) => {\r\n  let filtered = [];\r\n  // loop throught each element\r\n  for (let i in arr) {\r\n    const object = arr[i];\r\n    const theDate = new Date(object.date).toLocaleString();\r\n    //chech if the title contains the value\r\n    if (\r\n      object.title.includes(value) ||\r\n      object.body.includes(value) ||\r\n      theDate.includes(value)\r\n    ) {\r\n      filtered.push(object);\r\n    }\r\n  }\r\n  return filtered;\r\n};\r\n\r\n// when called on a button it console.log the selected html\r\nfunction getHTMLOfSelection() {\r\n  var range;\r\n  if (document.selection && document.selection.createRange) {\r\n    range = document.selection.createRange();\r\n    console.log(range.htmlText);\r\n  } else if (window.getSelection) {\r\n    var selection = window.getSelection();\r\n    if (selection.rangeCount > 0) {\r\n      range = selection.getRangeAt(0);\r\n      var clonedSelection = range.cloneContents();\r\n\r\n      var div = document.createElement(\"div\");\r\n      div.appendChild(clonedSelection);\r\n      console.log(div.innerHTML);\r\n    } else {\r\n      return \"\";\r\n    }\r\n  } else {\r\n    return \"\";\r\n  }\r\n}\r\n\r\n/**\r\n * LOADS ONLY THE FORM, so the result staythe same until refreshed\r\n */\r\nconst loadInputsSessionGoal = () => {\r\n  const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n  const view = new _View__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  //set the page in the page handler, for the dom selector and view\r\n  ph.setCurrentPage(\"LOAD-SESSION-GOAL\");\r\n  //inside the domSelector set the element needed for this page\r\n  const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_0__[\"domSelector\"])(ph.getCurrentPage());\r\n  // give the array to the view to load the form\r\n  view.fill(elementsArray, ph);\r\n};\r\n\r\nconst setGoal = form => {\r\n  const goal = form.querySelector(\"[loading-id=session-goal-input]\").value;\r\n  if (!goal || goal === \"\" || goal === \" \" || goal === \"  \") {\r\n    // NOTHING WRITTEN NO GOAL\r\n    return;\r\n  } else {\r\n    // SOMETHING WRITTEN INSIDE :: CONTINUE\r\n    // SAVE GOAL IN LOCAL STORAGE UNDER THIS SESSION ID\r\n    const currentSessionId = getIdSession();\r\n    // set as storage an object named sessionsgoals,\r\n    let ref;\r\n    // check for the record\r\n    if (localStorage.getItem(\"session-goals\")) {\r\n      ref = localStorage.getItem(\"session-goals\");\r\n    } else {\r\n      localStorage.setItem(\"session-goals\", \"[]\");\r\n      ref = localStorage.getItem(\"session-goals\");\r\n    }\r\n    //if array empty add the obj\r\n    if (ref === \"[]\") {\r\n      // array empty\r\n      const obj = {\r\n        sessionId: currentSessionId,\r\n        goals: [{ name: goal, done: false, resetted: false, info: \"\", last: 0 }]\r\n      };\r\n      let data = [obj];\r\n      //console.log(data);\r\n      localStorage.setItem(\"session-goals\", JSON.stringify(data));\r\n    } else {\r\n      //parse array from local storage\r\n      const arr = JSON.parse(ref);\r\n      console.log(\r\n        currentSessionId + \" ------   \" + arr[0].sessionId + \"   \" + arr[0]\r\n      );\r\n      if (currentSessionId === arr[0].sessionId) {\r\n        //push to array\r\n        const goalsArray = arr[0].goals;\r\n        let lock = false;\r\n        // check if there is already the same goal in the array\r\n        goalsArray.forEach(x => {\r\n          if (x.name === goal) {\r\n            lock = true;\r\n          }\r\n        });\r\n        //if there is no goal with this name add goal\r\n        if (!lock) {\r\n          goalsArray.push({\r\n            name: goal,\r\n            done: false,\r\n            resetted: false,\r\n            info: \"\",\r\n            last: 0\r\n          });\r\n          arr[0].goals = goalsArray;\r\n          localStorage.setItem(\"session-goals\", JSON.stringify(arr));\r\n        } else {\r\n          //continue\r\n          console.log(lock + \"goal already set for this session\");\r\n        }\r\n      } else {\r\n        // the storage has an object but the name of [0] does not match\r\n        // create a new session object\r\n        const obj = {\r\n          sessionId: currentSessionId,\r\n          goals: [\r\n            { name: goal, done: false, resetted: false, info: \"\", last: 0 }\r\n          ]\r\n        };\r\n        // getting from the local storage the array stored and parse\r\n        const dataArr = JSON.parse(ref);\r\n        //[{},{},...]\r\n        // pushing in the forst position [0] the new object\r\n        dataArr.unshift(obj);\r\n        // parsing back the object to string and set in local storage\r\n        localStorage.setItem(\"session-goals\", JSON.stringify(dataArr));\r\n        console.log(localStorage.getItem(\"session-goals\"));\r\n        console.log(\"new session for new goals\");\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/// G O A L S   G O A L S   G O A L S    G O A L S\r\n\r\nconst checkGoalFromRecord = goalElement => {\r\n  const call = new _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n  const goalName = goalElement.getAttribute(\"loading-id\");\r\n  const sessionId = goalElement.getAttribute(\"session-id\");\r\n  const form = goalElement.parentElement;\r\n  const inputText = form.querySelector(\"[loading-id=goal-info-input]\");\r\n  // find the right input\r\n  const input = form.querySelectorAll(\"[loading-id=goal-info-input]\");\r\n  // add class visible\r\n  input.forEach(i => i.classList.add(\"active\"));\r\n\r\n  form.addEventListener(\"submit\", e => {\r\n    e.preventDefault();\r\n    const info = inputText.value || \"\";\r\n    inputText.value = \"\";\r\n    call.checkGoal(goalName, sessionId, info);\r\n    input.forEach(i => i.classList.remove(\"active\"));\r\n    // if call returns something..\r\n    loadRecords();\r\n  });\r\n  // add listener to form on submit\r\n  //and call...\r\n\r\n  // refresh the result\r\n};\r\n\r\nconst loadInputAlarm = () => {\r\n  const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n  const view = new _View__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  //set the page in the page handler, for the dom selector and view\r\n  ph.setCurrentPage(\"LOAD-ALARM-INPUT\");\r\n  //inside the domSelector set the element needed for this page\r\n  const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_0__[\"domSelector\"])(ph.getCurrentPage());\r\n  // give the array to the view to load the form\r\n  view.fill(elementsArray, ph);\r\n};\r\n\r\nconst setAlarm = form => {\r\n  console.log(\"set alarm submitted\");\r\n  // take parameters out of thhe form,\r\n  const title = form.querySelector(\"[loading-id=alarm-name]\").value;\r\n  const body = \"\";\r\n  const date = form.querySelector(\"[loading-id=alarm-day]\").value.split(\"-\");\r\n  // extracting the date\r\n  const year = date[0];\r\n  const month = parseInt(date[1]) - 1;\r\n  const day = date[2];\r\n\r\n  let hours = form.querySelector(\"[loading-id=alarm-time-hours]\").value;\r\n  const minutes = form.querySelector(\"[loading-id=alarm-time-minutes]\").value;\r\n  // creating a date hakdlebar string\r\n\r\n  // cheks day undefined\r\n  if (\r\n    title === \"\" ||\r\n    title === \" \" ||\r\n    hours === \"\" ||\r\n    minutes === \"\" ||\r\n    isNaN(month) ||\r\n    date.length < 1\r\n  ) {\r\n    console.log(\" something empty \");\r\n  } else {\r\n    const d = new Date(year, month, day, hours, minutes, 0, 0);\r\n    // parse to ms\r\n    const dateParsedMs = Date.parse(d);\r\n\r\n    console.log(\"something empty\");\r\n    // is alarm field is false\r\n    const sessionId = getIdSession();\r\n    const newObj = {\r\n      title,\r\n      body,\r\n      date: Date.now(),\r\n      checked: false,\r\n      sessionId,\r\n      alarm: dateParsedMs\r\n    };\r\n    console.log(newObj);\r\n\r\n    if (addAlarm(newObj)) {\r\n      console.log(\"the alarm is set\");\r\n      // write object in records\r\n      const call = new _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n      call.pushDataToIndexedDb(newObj);\r\n      loadRecords();\r\n    } else {\r\n      //\r\n      console.log(\"the record could not be inserted\");\r\n    }\r\n\r\n    // set as local storage alarms[{nameb, .. when}]\r\n    // loading the page if there are alarms check every minute.. until there are alarms loop goes\r\n    // it just checks in the alarms array when , if the time is up, show card popup and remove.\r\n  }\r\n};\r\n\r\nconst addAlarm = obj => {\r\n  const alarms = JSON.parse(localStorage.getItem(\"alarms\"));\r\n  let result = alarms || [];\r\n  // are used for the final chech to compare if the array has more elements\r\n\r\n  if (alarms) {\r\n    if (alarms.length < 1) {\r\n      // if for some reason push to []\r\n      console.log(\"array is empty, but inserting \");\r\n      result.push(obj);\r\n    } else {\r\n      // there are other records\r\n      result.push(obj);\r\n      console.log(\"isert in existing array\");\r\n    }\r\n  } else {\r\n    //set item and return true\r\n    console.log(\"no object in local storage\");\r\n    result.push(obj);\r\n  }\r\n  // last check\r\n  if (result && result.length > 0) {\r\n    localStorage.setItem(\"alarms\", JSON.stringify(result));\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst refreshResultGoals = () => {\r\n  console.log(\"refresh goals\");\r\n  const call = new _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n  // RESPONSE\r\n  const view = new _View__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n\r\n  //inside the domSelector set the element needed for this page\r\n  ph.setCurrentPage(\"LOAD-GOALS\");\r\n  ph.setResultSet(call.getGoals());\r\n  //\r\n  const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_0__[\"domSelector\"])(ph.getCurrentPage());\r\n  // the view needs this instance of the object to load the html template extracting the oject of records\r\n  view.fill(elementsArray, ph);\r\n\r\n  // add event listener for buttons in the result\r\n\r\n  const result = document.querySelector(\"[loading-id=result-container]\");\r\n  const buttons = result.querySelectorAll(\"[loading-id=delete-goal]\");\r\n  const forms = result.querySelectorAll(\"[loading-id=form-info-goal]\");\r\n\r\n  if (buttons) {\r\n    console.log(buttons);\r\n    buttons.forEach(btn => {\r\n      btn.addEventListener(\"click\", e => deleteGoal(e));\r\n    });\r\n  }\r\n\r\n  console.log(forms);\r\n  if (forms) {\r\n    console.log(forms);\r\n    forms.forEach(btn => {\r\n      btn.addEventListener(\"submit\", checkGoal);\r\n    });\r\n  }\r\n};\r\n\r\nfunction deleteGoal(e) {\r\n  const name = e.target.getAttribute(\"info\");\r\n\r\n  // REACHING SOMEHOW THE CONTAINER\r\n  const span = e.target.parentElement;\r\n  const goalContainer = span.parentElement;\r\n\r\n  // set style to hide;\r\n  goalContainer.style.transform = \"scaleY(0)\";\r\n\r\n  //get the goal name and delete\r\n\r\n  _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"].prototype.deleteGoal(name);\r\n  console.log(goalContainer);\r\n  console.log(span);\r\n  console.log(name);\r\n}\r\n\r\nfunction checkGoal(e) {\r\n  const call = new _Calls_Calls__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n  const form = e.target;\r\n  const info = form.querySelector(\"[loading-id=goal-info-inputField]\").value;\r\n  const sessionId = form.getAttribute(\"session-id\");\r\n  const goalName = JSON.parse(form.getAttribute(\"info-obj\")).name;\r\n  // console.log(info, sessionId, goalName);\r\n  call.checkGoal(goalName, sessionId, info);\r\n  // best is make a form same as the other\r\n  refreshResultGoals();\r\n}\r\n\n\n//# sourceURL=webpack:///./dist/js/actions/index.js?");

/***/ }),

/***/ "./dist/js/auth/index.js":
/*!*******************************!*\
  !*** ./dist/js/auth/index.js ***!
  \*******************************/
/*! exports provided: login, signup */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"login\", function() { return login; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"signup\", function() { return signup; });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\nconst PROXY = \"https://pryvapp.herokuapp.com\";\r\nconst DEV = \"http://localhost:5000\";\r\n\r\nasync function login(email, password) {\r\n  // need to return a promise to have errors in res.json\r\n  const requestBody = { email, password };\r\n  let res;\r\n  res = await fetch(`${DEV}/api/users/login`, {\r\n    method: \"post\",\r\n    body: JSON.stringify(requestBody),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  });\r\n  // also errors fom res.status(400).json)({err:\"the error\"}) are passed as res.json here || users\r\n  const response = await res.json();\r\n  //the function give as resolve the {err: \"hte error\"} in .err if there is the error..\r\n\r\n  return response;\r\n}\r\n\r\nfunction signup(email, password, displayFeed) {\r\n  const data = { email, password };\r\n  // axios calls the the data in the response ..... .. ..  .data!\r\n  //\r\n  //let feedback = document.querySelector(\"[loading-id=form-feedback]\");\r\n\r\n  axios__WEBPACK_IMPORTED_MODULE_0___default.a\r\n    .post(`${DEV}/api/users/register`, data)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //go does not run if error\r\n      displayFeed(true, \"now you can log in\");\r\n    })\r\n    .catch(err => {\r\n      // nothing, say the user is already in\r\n      displayFeed(false, \"Email aready registered\");\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack:///./dist/js/auth/index.js?");

/***/ }),

/***/ "./dist/js/eventListeners/index.js":
/*!*****************************************!*\
  !*** ./dist/js/eventListeners/index.js ***!
  \*****************************************/
/*! exports provided: activateFormButton, goalListener, activateSearchListener, listenNavbar, listenResult, mainClickListenerForClosingContents, alarmsCheck, activateGoalLoad, loginForm, logoutBtnListener */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"activateFormButton\", function() { return activateFormButton; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"goalListener\", function() { return goalListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"activateSearchListener\", function() { return activateSearchListener; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"listenNavbar\", function() { return listenNavbar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"listenResult\", function() { return listenResult; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mainClickListenerForClosingContents\", function() { return mainClickListenerForClosingContents; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"alarmsCheck\", function() { return alarmsCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"activateGoalLoad\", function() { return activateGoalLoad; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loginForm\", function() { return loginForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"logoutBtnListener\", function() { return logoutBtnListener; });\n/* harmony import */ var _actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actions */ \"./dist/js/actions/index.js\");\n/* harmony import */ var _actions_crypt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../actions/crypt */ \"./dist/js/actions/crypt.js\");\n/* harmony import */ var _auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../auth */ \"./dist/js/auth/index.js\");\n/* harmony import */ var _pages_welcomePage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pages/welcomePage */ \"./dist/js/pages/welcomePage.js\");\n\r\n\r\n\r\n\r\n\r\n\r\nconst loadingId = x => document.querySelector(\"[loading-id=\" + x + \"]\");\r\n\r\nconst activateFormButton = () => {\r\n  const form = loadingId(\"form-commands\");\r\n  if (form) {\r\n    form.addEventListener(\"submit\", e => {\r\n      e.preventDefault();\r\n      submitForm(e);\r\n    });\r\n  }\r\n};\r\n\r\n// listener for goals displayed in the record ( to open input field )\r\nconst goalListener = () => {\r\n  //display of goals in main records\r\n  const goalsBar = document.querySelectorAll(\"[loading-id=goals-listener]\");\r\n  if (goalsBar && goalsBar.length > 0) {\r\n    goalsBar.forEach(bar => {\r\n      bar.addEventListener(\"click\", goalsListenerDelegation);\r\n    });\r\n  }\r\n};\r\n\r\n// FUNCTION SEARCH ON KEYUP, TÖ SEARCH INPUT FIELD\r\nconst activateSearchListener = () => {\r\n  const searchInput = document.querySelector(\"[loading-id=input-search]\");\r\n  if (searchInput) {\r\n    searchInput.addEventListener(\"keyup\", e => Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"searchRecord\"])(e.target.value));\r\n  }\r\n};\r\n\r\n//  MAIN FORM LISTENER, TARGETING THE FIRST ELEMENT ( loaded as template on navbar click ).\r\nconst submitForm = e => {\r\n  // GETTING THE VALUE FROM THE FIRST DIV IN THE TEMPLATE\r\n  const submitted = e.target.firstChild.nextSibling.getAttribute(\"loading-id\");\r\n  const form = e.target;\r\n  // switch for the first child of the form.. defined in templatesarr\r\n  switch (submitted) {\r\n    case \"SEARCH-DATA\":\r\n      // displaying the result set\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"loadRecords\"])();\r\n      // calling action to query api and fill the new view of the result\r\n      break;\r\n    case \"INSERT-DATA\":\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"insertRecord\"])(form);\r\n      break;\r\n    case \"LOAD-SESSION-GOAL\":\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"setGoal\"])(form);\r\n      break;\r\n    case \"LOAD-ALARM-INPUT\":\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"setAlarm\"])(form);\r\n      // starting check of alarms\r\n      alarmsCheck();\r\n      break;\r\n    case \"LOAD-CRYPT-OPT\":\r\n      Object(_actions_crypt__WEBPACK_IMPORTED_MODULE_1__[\"addCryptRecord\"])(form);\r\n      console.log(\"wow it works .. here we can bild an action now\");\r\n      break;\r\n\r\n    default:\r\n      console.log(\"default value of switch for form event listener\");\r\n  }\r\n};\r\n\r\n// GIVING TO ENTIRE NAVBAR CLICK EVENT, then event fires different actions for different options in the nav\r\nfunction listenNavbar() {\r\n  const navbar = loadingId(\"navbar-commands\");\r\n  if (navbar) {\r\n    navbar.addEventListener(\"click\", e => delegationNavbar(e));\r\n  }\r\n\r\n  const delegationNavbar = e => {\r\n    // get attribute of clicked element\r\n    const trgt = e.target.getAttribute(\"loading-id\");\r\n    const cryptForm = document.querySelector(\"[form-crypt=show]\");\r\n\r\n    // load the texfieltd to decrypt incase of crypt form\r\n    if (cryptForm) {\r\n      document\r\n        .querySelector(\"[loading-id=subtitle-container]\")\r\n        .removeChild(cryptForm);\r\n    }\r\n    if (trgt === \"search-data\") {\r\n      //load form to search\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"loadSearchData\"])();\r\n      activateSearchListener();\r\n      // refresh the result\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"loadRecords\"])();\r\n    } else if (trgt === \"add-data\") {\r\n      // load the form\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"loadInsertData\"])();\r\n    } else if (trgt === \"set-session-goal\") {\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"loadInputsSessionGoal\"])();\r\n      activateGoalLoad();\r\n    } else if (trgt === \"set-session-alarm\") {\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"loadInputAlarm\"])();\r\n    } else if (\"set-session-cryptmsg\") {\r\n      // set event listeners for the crypt otions\r\n      Object(_actions_crypt__WEBPACK_IMPORTED_MODULE_1__[\"loadCryptOptions\"])();\r\n      //getCryptAll();\r\n    }\r\n  };\r\n}\r\n\r\n// LISTENER FOR THE RESULT\r\nconst listenResult = () => {\r\n  const resultContainer = loadingId(\"result-container\");\r\n  if (resultContainer) {\r\n    resultContainer.addEventListener(\"click\", resultDelegation);\r\n  }\r\n};\r\n// not needed anywhere else yet..\r\nconst resultDelegation = e => {\r\n  // checking if it has a js attribute\r\n  let attribute = e.target.getAttribute(\"loading-id\") || null;\r\n\r\n  // SERCHING FOR DELETE BUTTON\r\n  if (attribute) {\r\n    // split the id and the attribute\r\n    if (attribute.startsWith(\"delete-record-\")) {\r\n      // CHECK FOR IS CRYPT ATTRIBUTE\r\n      if (\r\n        e.target.getAttribute(\"is-crypt\") !== \"\" &&\r\n        e.target.getAttribute(\"is-crypt\") !== null &&\r\n        e.target.getAttribute(\"is-crypt\") !== undefined\r\n      ) {\r\n        // !! Attr. given from template if object comes FROM BACKEND !!\r\n        const id = e.target.getAttribute(\"is-crypt\");\r\n        Object(_actions_crypt__WEBPACK_IMPORTED_MODULE_1__[\"deleteCryptRecord\"])(id);\r\n\r\n        //if the object has the props of local storage object\r\n      } else {\r\n        // taking as array last numbers of attribute to have the id\r\n        let id = attribute.split(\"\").splice(14, attribute.length - 14);\r\n        id = id.join(\"\");\r\n        Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"deleteRecord\"])(id);\r\n      }\r\n\r\n      // SEARCHING FOR CHECK BUTTON\r\n    } else if (attribute.startsWith(\"check-record-\")) {\r\n      console.log(\"calling action to modify thing in db\");\r\n      let id = attribute.split(\"\").splice(13, attribute.length - 13);\r\n      // id is an array\r\n      id = id.join(\"\");\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"checkRecord\"])(id);\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"deleteRecord\"])(id);\r\n      Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"loadRecords\"])();\r\n    }\r\n  }\r\n};\r\n\r\n/***\r\n *  GOAL LISTENER IS IN THE MAIN LISTENER FOR CLOSING CONTEN..\r\n * FOR FLOW REASONS\r\n */\r\nfunction goalsListenerDelegation(e) {\r\n  // closes the form if the result set is the standard messages\r\n  const goalElement = e.target;\r\n  console.log(goalElement); // prints the whole node of results the outer span\r\n  Object(_actions__WEBPACK_IMPORTED_MODULE_0__[\"checkGoalFromRecord\"])(goalElement);\r\n}\r\n\r\n//  EVENT LISTENER ON DOCUMENT !! IF GOAL INPUT IS OPEN IN THE MAIN MESSAGE FEATURE CLOSE IT CLICKING \" SOMEWHERE ELSE\"\r\nfunction mainClickListenerForClosingContents() {\r\n  document.addEventListener(\"click\", e => {\r\n    //check for elements\r\n    const goalFormStuff = document.querySelectorAll(\r\n      \"[loading-id=goal-info-input]\"\r\n    );\r\n    if (goalFormStuff && goalFormStuff.length > 0) {\r\n      console.log(\"there is the form somewhere\");\r\n      if (\r\n        e.target.getAttribute(\"loading-id\") !== \"goal-info-input\" &&\r\n        !e.target.hasAttribute(\"session-id\")\r\n      ) {\r\n        // closing other windows\r\n        const input = document.querySelectorAll(\"[loading-id=goal-info-input]\");\r\n        input.forEach(i => i.classList.remove(\"active\"));\r\n      } else if (e.target.hasAttribute(\"session-id\")) {\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// if an alarm is set every 10 seconds checks for date\r\nfunction alarmsCheck() {\r\n  const alarms = localStorage.getItem(\"alarms\");\r\n  let timeout = setTimeout(alarmsCheck, 1000 * 10);\r\n  //check if there is the object\r\n  if (alarms && alarms !== \"[]\") {\r\n    JSON.parse(alarms).forEach((elem, index) => {\r\n      //loop throught the obj arr and find if one has an alarm\r\n      if (elem.alarm > 1000 && elem.alarm !== \"\") {\r\n        if (Date.now() > elem.alarm) {\r\n          alert(elem.title);\r\n          let resetArr = [...JSON.parse(alarms)];\r\n          resetArr.splice(index, 1);\r\n          localStorage.setItem(\"alarms\", JSON.stringify(resetArr));\r\n        }\r\n      }\r\n    });\r\n  } else {\r\n    //console.log(\"NO alarms are set\");\r\n    clearTimeout(timeout);\r\n  }\r\n}\r\n\r\nfunction activateGoalLoad() {\r\n  const form = document.querySelector(\"[loading-id=form-commands]\");\r\n  if (form) {\r\n    const button = form.querySelector(\"[loading-id=load-goals]\");\r\n    button.addEventListener(\"click\", _actions__WEBPACK_IMPORTED_MODULE_0__[\"refreshResultGoals\"]);\r\n  }\r\n}\r\n\r\n//  LOGIN FORM --- if the login succeed the app starts all the listeners\r\nfunction loginForm(startFunction) {\r\n  // private show feedback function\r\n\r\n  const displayFeed = (pass, message) => {\r\n    let feedback = document.querySelector(\"[loading-id=form-feedback]\");\r\n    if (pass) {\r\n      // feedback GREEN\r\n      feedback.classList.add(\"form-feedback-go\");\r\n      feedback.innerHTML = message;\r\n      setTimeout(() => {\r\n        feedback.classList.remove(\"form-feedback-go\");\r\n        feedback.innerHTML = \"\";\r\n      }, 3000);\r\n    } else {\r\n      // feedback red\r\n      feedback.classList.add(\"form-feedback-error\");\r\n      feedback.innerHTML = message;\r\n      setTimeout(() => {\r\n        feedback.classList.remove(\"form-feedback-error\");\r\n        feedback.innerHTML = \"\";\r\n      }, 3000);\r\n    }\r\n  };\r\n\r\n  // .......dev reasons\r\n  const BACKEND = true;\r\n  if (BACKEND) {\r\n    //\r\n    const form = document.querySelector(\"[loading-id=login-form]\");\r\n\r\n    form.addEventListener(\"submit\", () => {\r\n      const email = form.querySelector(\"[name=email]\").value;\r\n      const password = form.querySelector(\"[name=password]\").value;\r\n      let logIn = form.querySelector(\"[loading-id=form-radio-login]\").checked;\r\n      let signUp = form.querySelector(\"[loading-id=form-radio-signup]\").checked;\r\n\r\n      // CHECKING IF FIELDS ARE EMPTY\r\n      if (\r\n        email === \"\" ||\r\n        email === \" \" ||\r\n        password === \"\" ||\r\n        password === \" \"\r\n      ) {\r\n        // SET ALL FALSE TO SKIP THE NEXT IF STATEMENT\r\n        logIn = false;\r\n        signUp = false;\r\n        displayFeed(false, \"There are empty fields\");\r\n      }\r\n\r\n      if (logIn && !signUp) {\r\n        //\r\n        Object(_auth__WEBPACK_IMPORTED_MODULE_2__[\"login\"])(email, password)\r\n          .then(data => {\r\n            // check if the response from backend contains {err:\"something\"}\r\n            if (data.err) {\r\n              console.log(data.err);\r\n              // USER NOT FOUND\r\n              displayFeed(false, data.err);\r\n            } else {\r\n              // USER FOUND, FURTHER\r\n              if (data.success) {\r\n                // SAVE THE TOKEN SOMEWHERE\r\n                document\r\n                  .querySelector(\"[loading-id=footer]\")\r\n                  .setAttribute(\"token\", data.token);\r\n              }\r\n              form.parentElement.innerHTML = _pages_welcomePage__WEBPACK_IMPORTED_MODULE_3__[\"welcomePage\"];\r\n              //form.outerHTML = \"\";\r\n              startFunction();\r\n              // the welcome page is just a variable in folder pages, template for first page\r\n              console.log(\"WELCOME\");\r\n            }\r\n          })\r\n          .catch(err => console.log(err));\r\n      } else if (!logIn && signUp) {\r\n        // signup is just a function that show if the user is registered.\r\n        Object(_auth__WEBPACK_IMPORTED_MODULE_2__[\"signup\"])(email, password, displayFeed);\r\n      }\r\n      // login signup end if\r\n    });\r\n  } else {\r\n    // if no backend just leave the normal functions\r\n    startFunction();\r\n  }\r\n}\r\n\r\n// LOGOUT LISTENER\r\nconst logoutBtnListener = () => {\r\n  document.querySelector(\"[loading-id=logout]\").addEventListener(\"click\", e => {\r\n    document.querySelector(\"[loading-id=footer]\").innerHTML = \"\";\r\n\r\n    //instanciate request\r\n    const xmlhttp = new XMLHttpRequest();\r\n    //open request\r\n    xmlhttp.open(\"GET\", \"http://localhost:5000/api/users/index\", true);\r\n    //set header\r\n    xmlhttp.setRequestHeader(\r\n      \"Content-Type\",\r\n      \"Application/json ; charset=UTF-8\"\r\n    );\r\n    //set the onload\r\n    xmlhttp.onload = () => {\r\n      console.log(\"redirected\");\r\n    };\r\n    //send request\r\n    xmlhttp.send();\r\n  });\r\n};\r\n\n\n//# sourceURL=webpack:///./dist/js/eventListeners/index.js?");

/***/ }),

/***/ "./dist/js/main.js":
/*!*************************!*\
  !*** ./dist/js/main.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pages_pageHandler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pages/pageHandler */ \"./dist/js/pages/pageHandler.js\");\n/* harmony import */ var _pages_domSelector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pages/domSelector */ \"./dist/js/pages/domSelector.js\");\n/* harmony import */ var _View__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./View */ \"./dist/js/View/index.js\");\n/* harmony import */ var _eventListeners__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./eventListeners */ \"./dist/js/eventListeners/index.js\");\n\r\n\r\n\r\n\r\n\r\n//on page loaded\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  Object(_eventListeners__WEBPACK_IMPORTED_MODULE_3__[\"loginForm\"])(start);\r\n});\r\n\r\nconst start = () => {\r\n  const ph = new _pages_pageHandler__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\r\n  const view = new _View__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n  const page = ph.getCurrentPage();\r\n  // having the page to load fill the components needed\r\n  const elementsArray = Object(_pages_domSelector__WEBPACK_IMPORTED_MODULE_1__[\"domSelector\"])(page); // swithc for to find the layout\r\n  // call view with the page and the elements to load\r\n  view.fill(elementsArray, ph);\r\n  // event listener fr the navbar\r\n  Object(_eventListeners__WEBPACK_IMPORTED_MODULE_3__[\"listenNavbar\"])();\r\n  Object(_eventListeners__WEBPACK_IMPORTED_MODULE_3__[\"activateFormButton\"])();\r\n  Object(_eventListeners__WEBPACK_IMPORTED_MODULE_3__[\"listenResult\"])();\r\n  Object(_eventListeners__WEBPACK_IMPORTED_MODULE_3__[\"mainClickListenerForClosingContents\"])();\r\n  Object(_eventListeners__WEBPACK_IMPORTED_MODULE_3__[\"alarmsCheck\"])();\r\n  // logoutBtnListener();\r\n}; //end if login\r\n\n\n//# sourceURL=webpack:///./dist/js/main.js?");

/***/ }),

/***/ "./dist/js/pages/domSelector.js":
/*!**************************************!*\
  !*** ./dist/js/pages/domSelector.js ***!
  \**************************************/
/*! exports provided: domSelector */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"domSelector\", function() { return domSelector; });\nfunction domSelector(page) {\r\n  let elementsArray = new Array();\r\n  const loadingId = x => document.querySelector(\"[loading-id=\" + x + \"]\");\r\n  switch (page) {\r\n    case \"INSERT-DATA\":\r\n      // return the array of elements that the view needs\r\n      elementsArray = [];\r\n      elementsArray.push(loadingId(\"form-commands\"));\r\n      elementsArray.push(loadingId(\"subtitle\"));\r\n      break;\r\n    case \"LOAD-RESULTS\":\r\n      elementsArray = [];\r\n      elementsArray.push(loadingId(\"result-container\"));\r\n      break;\r\n    case \"SEARCH-DATA\":\r\n      elementsArray = [];\r\n      elementsArray.push(loadingId(\"form-commands\"));\r\n      elementsArray.push(loadingId(\"subtitle\"));\r\n      break;\r\n    case \"LOAD-SESSION-GOAL\":\r\n      elementsArray = [];\r\n      elementsArray.push(loadingId(\"form-commands\"));\r\n      elementsArray.push(loadingId(\"subtitle\"));\r\n      break;\r\n    case \"LOAD-ALARM-INPUT\":\r\n      elementsArray = [];\r\n      elementsArray.push(loadingId(\"form-commands\"));\r\n      elementsArray.push(loadingId(\"subtitle\"));\r\n      break;\r\n    case \"LOAD-GOALS\":\r\n      elementsArray = [];\r\n      elementsArray.push(loadingId(\"result-container\"));\r\n      break;\r\n\r\n    case \"LOAD-CRYPT-OPT\":\r\n      elementsArray = [];\r\n      elementsArray.push(loadingId(\"form-commands\"));\r\n      elementsArray.push(loadingId(\"subtitle\"));\r\n      break;\r\n\r\n    default:\r\n      console.log(\"default\");\r\n  }\r\n  return elementsArray;\r\n}\r\n\n\n//# sourceURL=webpack:///./dist/js/pages/domSelector.js?");

/***/ }),

/***/ "./dist/js/pages/pageHandler.js":
/*!**************************************!*\
  !*** ./dist/js/pages/pageHandler.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nclass PageHandler {\r\n  constructor() {\r\n    this.currentPage = \"INSERT-DATA\";\r\n    this.resultSet = [];\r\n  }\r\n\r\n  // SET GET ter for CurrentPage\r\n  getCurrentPage() {\r\n    return this.currentPage;\r\n  }\r\n  setCurrentPage(page) {\r\n    this.currentPage = page;\r\n  }\r\n\r\n  // SET GET ter for resultSet\r\n  getResultSet() {\r\n    return this.resultSet;\r\n  }\r\n  setResultSet(resultSet) {\r\n    this.resultSet = resultSet;\r\n  }\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (PageHandler);\r\n\n\n//# sourceURL=webpack:///./dist/js/pages/pageHandler.js?");

/***/ }),

/***/ "./dist/js/pages/welcomePage.js":
/*!**************************************!*\
  !*** ./dist/js/pages/welcomePage.js ***!
  \**************************************/
/*! exports provided: welcomePage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"welcomePage\", function() { return welcomePage; });\nconst welcomePage = `\r\n<div class=\"welcome\">\r\n<h2 class=\"welcome-tilte\">Welcome to PRYVAPP</h2>\r\n\r\n<h4 class=\"welcome-subtitle\">\r\n  Here you can manage the organization of your days and save encrypted\r\n  messages wit a key you choose!\r\n</h4>\r\n\r\n<p class=\"welcome-paragraph\">\r\n  Add yout thoughts throught out the day, if something you mind is to keep\r\n  in the head, leave your ideas for later direcly fast and easy in your\r\n  dashboard, or encrypt your messages and info and send them encrypted to the\r\n  server. Your messages are for the entire process encrypted, from when\r\n  are sent to the saving. You will receive your encrypted messages and you can\r\n  decrypt them on the fly with different keys for different messages, if\r\n  you want.\r\n</p>\r\n\r\n<p class=\"welcome-paragraph\">\r\n  At every will be assigned to you the session that rappresents a day or a\r\n  \"Work day\", in that session you can set the goals of the days and then\r\n  change the goals status or delete them. The session get changed when the user enter after 8 hurs to the last session.\r\n</p>\r\n\r\n<p class=\"welcome-paragraph\">\r\n  When something important is new to do, but you have to do something\r\n  right away you can set an alarm, ad you will get notifyed when the time\r\n  is gone\r\n</p>\r\n<br>\r\n<p class=\"welcome-paragraph\">\r\n  App built from <strong>Massimo Ganzerli</strong>, with <strong>Javascript</strong>.\r\n</p>\r\n<p class=\"welcome-paragraph\">\r\n<strong>Tools </strong> involved: <strong>Webpack, Node , Express server, Sass. </strong>\r\n</p>\r\n</div>\r\n`;\r\n\n\n//# sourceURL=webpack:///./dist/js/pages/welcomePage.js?");

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");\n\n//# sourceURL=webpack:///./node_modules/axios/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\nvar btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(/*! ./../helpers/btoa */ \"./node_modules/axios/lib/helpers/btoa.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if ( true &&\n        typeof window !== 'undefined' &&\n        window.XDomainRequest && !('withCredentials' in request) &&\n        !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || (request.readyState !== 4 && !xDomain)) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n          cookies.read(config.xsrfCookieName) :\n          undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(utils.merge(defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/cancel/Cancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar defaults = __webpack_require__(/*! ./../defaults */ \"./node_modules/axios/lib/defaults.js\");\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/createError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\nvar isAbsoluteURL = __webpack_require__(/*! ./../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ./../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/enhanceError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../AppData/Roaming/npm/node_modules/webpack/node_modules/process/browser.js */ \"../../AppData/Roaming/npm/node_modules/webpack/node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/axios/lib/defaults.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/btoa.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/btoa.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error;\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n    // initialize result and counter\n    var block, charCode, idx = 0, map = chars;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/btoa.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })()\n);\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n                  urlParsingNode.pathname :\n                  '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })()\n);\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar isBuffer = __webpack_require__(/*! is-buffer */ \"./node_modules/is-buffer/index.js\");\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n\n//# sourceURL=webpack:///./node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "./node_modules/is-buffer/index.js":
/*!*****************************************!*\
  !*** ./node_modules/is-buffer/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n//# sourceURL=webpack:///./node_modules/is-buffer/index.js?");

/***/ }),

/***/ "./util/index.js":
/*!***********************!*\
  !*** ./util/index.js ***!
  \***********************/
/*! exports provided: crypt, isEmpty */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"crypt\", function() { return crypt; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return isEmpty; });\n// trought the letters of alphabet array\r\n\r\nfunction crypt(input, key) {\r\n  // make shure is a string .. it is anyway\r\n  const str = input.toString();\r\n\r\n  // if the key is not divisible / 2 ..something\r\n  let alp = \"\";\r\n  const secretKey = noDupString(key);\r\n  if (secretKey.length % 2 === 0) {\r\n    alp += secretKey;\r\n    alp +=\r\n      \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890?@%+/'!#$?:.(){}[]-_\";\r\n  } else {\r\n    alp += secretKey.substring(1, secretKey.length);\r\n    alp +=\r\n      \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890?@%+/'!#$?:.(){}[]-_\";\r\n  }\r\n  //add the special char \" \" to make a super secret set\r\n  const secretSet = \" \" + noDupString(alp);\r\n\r\n  // all in arr to loop and search and super crypting all\r\n  const alphabetArr = secretSet.split(\"\");\r\n  let n = alphabetArr.length / 2;\r\n  const checkRightIndex = i => {\r\n    let startIndex = 0;\r\n    if (i < n) {\r\n      startIndex = i + n;\r\n    } else {\r\n      startIndex = i - n;\r\n    }\r\n    return startIndex;\r\n  };\r\n  const findIndexFromChar = c => {\r\n    for (let i = 0; i < alphabetArr.length; i++) {\r\n      if (c === alphabetArr[i]) {\r\n        return i;\r\n      }\r\n    }\r\n    return alphabetArr.length;\r\n  };\r\n  let theResult = \"\";\r\n  for (let i = 0; i < str.length; i++) {\r\n    theResult += alphabetArr[checkRightIndex(findIndexFromChar(str.charAt(i)))];\r\n  }\r\n  console.log(theResult);\r\n  return theResult;\r\n}\r\n\r\n//\r\nconst isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) || //if the object has no keys is empty\r\n  (typeof value === \"string\" && value.trim().length === 0); //if empty string\r\n// basically the function returns false if does not meet any of those prerequisites.\r\n\r\n// returns a string without duplicates\r\nconst noDupString = string => {\r\n  //reduce arg to string without duplicates\r\n  const myString = string.split(\" \").join(\"\");\r\n  let set = \"\";\r\n\r\n  //storing the found chars\r\n  let alreadyFound = {};\r\n\r\n  // looping throught myString\r\n  myString.split(\"\").forEach(char => {\r\n    //if no prop named as the char\r\n    if (!alreadyFound[char]) {\r\n      //update alreadyfound\r\n      alreadyFound[char] = 1;\r\n      //and concatenate the result\r\n      set += char;\r\n    }\r\n  });\r\n\r\n  return set;\r\n};\r\n\n\n//# sourceURL=webpack:///./util/index.js?");

/***/ }),

/***/ 0:
/*!*******************************!*\
  !*** multi ./dist/js/main.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./dist/js/main.js */\"./dist/js/main.js\");\n\n\n//# sourceURL=webpack:///multi_./dist/js/main.js?");

/***/ })

/******/ });